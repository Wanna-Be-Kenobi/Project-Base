
--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\Николай\Documents\GitHub\Project-Base\PixelChange.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#2: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x66253906 в функции SymGetLineFromAddrW64(). Попытка прочесть данные по адресу 0x00000014. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#3: TXLib [Ver: 00173a, Rev: 105, Date: 2018-03-19 00:00:00 +0300], Instance: 0x004FE2C0 (32-bit), Flags: CMdrE0, Thread: 0x17C0 (Canvas), GetLastError(): 87 (Параметр задан неверно). 

--------------------------------------------------
Стек вызовов:

# 0 0x66253906 in C:\Users\Николай\Desktop\Программирование\TX\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 1 0x740FC902 in C:\WINDOWS\System32\KERNELBASE.dll: GetNamedLocaleHashNode()
# 2 0x66244DA5 in C:\Users\Николай\Desktop\Программирование\TX\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at C:\Users\Николай\Desktop\Программирование\TX\TXLib.h (9832):

   9830: 
   9831: $       SetLastError (0);
=> 9832: $       (_TX_CALL (MinGW::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym)) && RES_(y)) ||
   9833:         (_TX_CALL (Win32::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym)) && RES_(Y)) ||
   9834:             DBG_("SymFromAddr (0x%p) failed", addr);

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, HANDLE) at C:\Users\Николай\Desktop\Программирование\TX\TXLib.h (9596):



--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-03-19 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	C:\Users\Николай\Desktop\Программирование\TX\TXLib.h
Compiled:	May 12 2018 10:42:48, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	May 12 2018 10:42:52

Run file:	C:\Users\Николай\Documents\GitHub\Project-Base\PixelChange.exe
Directory:	C:\Users\Николай\Documents\GitHub\Project-Base

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: C:\Users\Николай\Documents\GitHub\Project-Base\PixelChange.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#2: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x66253906 в функции SymGetLineFromAddrW64(). Попытка прочесть данные по адресу 0x00000014. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#3: TXLib [Ver: 00173a, Rev: 105, Date: 2018-03-19 00:00:00 +0300], Instance: 0x004FE2C0 (32-bit), Flags: CMdrE0, Thread: 0x1EDC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x66253906 in C:\Users\Николай\Desktop\Программирование\TX\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()
# 1 0x740FC902 in C:\WINDOWS\System32\KERNELBASE.dll: GetNamedLocaleHashNode()
# 2 0x66244DA5 in C:\Users\Николай\Desktop\Программирование\TX\Windows\MgwHelp32.dll: SymGetLineFromAddrW64()

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at C:\Users\Николай\Desktop\Программирование\TX\TXLib.h (9832):

   9830: 
   9831: $       SetLastError (0);
=> 9832: $       (_TX_CALL (MinGW::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym)) && RES_(y)) ||
   9833:         (_TX_CALL (Win32::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym)) && RES_(Y)) ||
   9834:             DBG_("SymFromAddr (0x%p) failed", addr);

# 1 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, HANDLE) at C:\Users\Николай\Desktop\Программирование\TX\TXLib.h (9596):

   9594: $       bool                    inTX   = false;
   9595: 
=> 9596:         if (addr)                { $ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
   9597:         if (readSource && !inTX) { $        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }
   9598: 

# 2 in long int {anonymous}::TX::_txOnExceptionSEH(EXCEPTION_POINTERS*, const char*) at C:\Users\Николай\Desktop\Программирование\TX\TXLib.h (9094):

   9092: $       unsigned err = GetLastError();
   9093: 
=> 9094: $       const char* stackTrace = _txCaptureStackBackTrace (0, true, exc->ContextRecord);
   9095: 
   9096: $       _txDumpExceptionSEH (_txDumpSE,  (ptrdiff_t) sizeof (_txDumpSE)  - 1, exc->ExceptionRecord, func);

# 3 in bool {anonymous}::TX::_txSymGetFromAddr(void*, {anonymous}::TX::Win32::SYMBOL_INFO**, {anonymous}::TX::Win32::IMAGEHLP_LINE64**, const char**, const char**, int) at C:\Users\Николай\Desktop\Программирование\TX\TXLib.h (9832):

   9830: 
   9831: $       SetLastError (0);
=> 9832: $       (_TX_CALL (MinGW::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym)) && RES_(y)) ||
   9833:         (_TX_CALL (Win32::SymFromAddr, (process, (uintptr_t) addr, &ofs, sym)) && RES_(Y)) ||
   9834:             DBG_("SymFromAddr (0x%p) failed", addr);

# 4 in const char* {anonymous}::TX::_txCaptureStackBackTrace(int, bool, CONTEXT*, HANDLE) at C:\Users\Николай\Desktop\Программирование\TX\TXLib.h (9596):

   9594: $       bool                    inTX   = false;
   9595: 
=> 9596:         if (addr)                { $ inTX = _txSymGetFromAddr ((char*) addr - 1, &sym, &line, &module);          }
   9597:         if (readSource && !inTX) { $        _txSymGetFromAddr ((void*) 1,        NULL, NULL,  NULL, &source, 2); }
   9598: 

# 5 in bool {anonymous}::TX::txSetPixel(double, double, COLORREF, HDC) at C:\Users\Николай\Desktop\Программирование\TX\TXLib.h (10779):

  10777: inline bool txSetPixel (double x, double y, COLORREF color, HDC dc /*= txDC()*/)
  10778:     {
=>10779: $1  if (_TX_DEFAULT_HDC_FAILED (dc)) return false;
  10780: 
  10781: $   txGDI ((Win32::SetPixel (dc, ROUND (x), ROUND (y), color)), dc);

# 6 in int main() at C:\Users\Николай\Documents\GitHub\Project-Base\PixelChange.cpp (38):

     36:             if (blue  % 2 != 0) blue--;
     37: 
=>   38:             txSetPixel (x, y, TX_PINK);
     39: 
     40:             x++;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 105, Date: 2018-03-19 00:00:00 +0300]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	C:\Users\Николай\Desktop\Программирование\TX\TXLib.h
Compiled:	May 12 2018 10:42:48, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	May 12 2018 10:42:52

Run file:	C:\Users\Николай\Documents\GitHub\Project-Base\PixelChange.exe
Directory:	C:\Users\Николай\Documents\GitHub\Project-Base

--------------------------------------------------
